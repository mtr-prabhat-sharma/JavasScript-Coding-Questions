1.	What will be the output of the following code ?
console.log(NaN === NaN)
a.	Udefined
b.	False
c.	Will throw an error
d.	True
Ans: False

2.	What will be the output of the following code ?
Console.log(‘5’ - - ‘3’)
a.	‘53’
b.	‘5undefined3’
c.	8
d.	2
Ans: 8
Explanation: The - - part in the middle is interpreted as the subtraction operation with the unary negation operator. It's equivalent to 5 - (-3).
The string '5' is implicitly converted to the number 5.
The string '-3' is implicitly converted to the number -3.
The subtraction operation 5 - (-3) results in 8.

3.	What will be the output of the following code?
Console.log(typeof NULL === typeof undefined)
a.	True
b.	False
c.	Error
d.	Undefined
Ans: True
Explanation: Here the typeof NULL = undefined whereas the typeof null = object and
typeof undefined = undefined.

4.	What will be the output of the following code ?
Console.log(3>2>1);
a.	True
b.	False
c.	Error
d.	Undefined
Ans: False
Explanation: 3 > 2 evaluates to true.
The result of true is implicitly coerced to a number when compared with 1. 
In JavaScript, true is coerced to 1, and false is coerced to 0.
So, the expression becomes 1 > 1, which is false.

5.	What will be the output of the following code ?
console.log({}?.constructor);
a.	[object object]
b.	Object
c.	“object”
d.	f Object() { … }
Ans: f Object() { ... }




